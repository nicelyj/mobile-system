<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="BoardList">
	<cacheModel id="boardCache" type="LRU" readOnly="true" serialize="false">
		<property name="size" value="500" />
		<flushOnExecute statement="BoardList.dummySql"/>
		<flushOnExecute statement="BoardList.insertBoard"/>
		<flushOnExecute statement="BoardList.updateBoard"/>
		<flushOnExecute statement="BoardList.deleteBoard"/>
		<flushInterval hours="1"/>
	</cacheModel>
	
	<statement id="dummySql">
		SELECT 1
	</statement>
	
	<!-- 보드입력 -->
	<insert id="insertBoard" parameterClass="com.song7749.mds.board.model.Board">
		INSERT INTO Board set 
		<dynamic>
			<isGreaterThan property="boardSeq" compareValue="0">
				boardSeq=#boardSeq# ,
			</isGreaterThan>
		</dynamic>
		boardName = '$boardName$'
		<selectKey keyProperty="boardSeq" resultClass="Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<!-- 보드 수정 -->
	<update id="updateBoard" parameterClass="com.song7749.mds.board.model.Board">
		UPDATE Board SET BoardName='$boardName$' WHERE boardSeq=#boardSeq#
	</update>

	<!-- 보드삭제 -->
	<delete id="deleteBoard" parameterClass="com.song7749.mds.board.model.Board">
		DELETE FROM Board WHERE 1=1 
		<dynamic>
			<isGreaterThan property="boardSeq" compareValue="0">
				AND boardSeq=#boardSeq#
			</isGreaterThan>
			<isNotEmpty property="boardName">
				AND boardName='$boardName$'
			</isNotEmpty>
		</dynamic>
	</delete>
	
	<!-- 보드 목록 리스트 맵 -->
	<resultMap class="com.song7749.mds.board.model.Board" id="Board-result">
		<result property="boardSeq" column="boardSeq"/>
		<result property="boardName" column="boardName" />
	</resultMap>

	<!-- 보드목록 조회 -->
	<sql id="selectBoardSql">
		SELECT boardSeq,boardName FROM Board WHERE 1=1
		<dynamic>
			<isGreaterThan property="boardSeq" compareValue="0">
				AND boardSeq=#boardSeq#
			</isGreaterThan>
			<isNotEmpty property="boardName">
				AND boardName='$boardName$'
			</isNotEmpty>
		</dynamic>
	</sql>
	<select id="selectBoards" parameterClass="com.song7749.mds.board.model.Board" resultMap="Board-result">
		<include refid="selectBoardSql"/>
	</select>
	<select id="selectBoardsCaches" parameterClass="com.song7749.mds.board.model.Board" resultMap="Board-result" cacheModel="BoardList.boardCache" >
		<include refid="selectBoardSql"/>
	</select>
	<!-- 보드목록 조회 끝 -->
	
	<!-- 보드리스트 입력 -->
	<insert id="insertBoardList" parameterClass="com.song7749.mds.board.model.BoardList" >
		INSERT INTO BoardList set
			boardSeq = #boardSeq#,
			boardTitle = '$boardTitle$',
			boardReadCount = #boardReadCount#,
			boardCommentCount = #boardCommentCount#,
			memberSeq = #memberSeq#,
			memberNickName = '$memberNickName$',
			memberIp = '$memberIp$',
			boardListDisplayYN = '$boardListDisplayYN$',
			boardListPublicReadYN = '$boardListPublicReadYN$',
			createDatetime = now(),
			updateDatetime = now()	
		<selectKey keyProperty="boardListSeq" resultClass="Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<!-- 보드컨텐츠 입력 -->
	<insert id="insertBoardContents" parameterClass="com.song7749.mds.board.model.BoardList">
		INSERT INTO BoardContents set
			boardListSeq =#boardListSeq#,
			contents = '$boardContents.contents$';	
		<selectKey keyProperty="boardListSeq" resultClass="Integer">
			SELECT MAX(boardListSeq) from BoardContents
		</selectKey>				
	</insert>
	
	<!-- 보드리스트 업데이트 -->
	<update id="updateBoardList" parameterClass="com.song7749.mds.board.model.BoardList">
		UPDATE BoardList set
			updateDatetime = now()
		<dynamic>
			<isGreaterThan property="boardSeq" compareValue="0" prepend=",">
				boardSeq = #boardSeq#
			</isGreaterThan>
			<isNotEmpty property="boardTitle" prepend=",">
				boardTitle = '$boardTitle$'
			</isNotEmpty>
			<isGreaterEqual property="boardReadCount" compareValue="0"  prepend=",">
				boardReadCount = #boardReadCount#
			</isGreaterEqual>
			<isGreaterEqual property="boardCommentCount" compareValue="0" prepend=",">
				boardCommentCount = #boardCommentCount#
			</isGreaterEqual>
			<isNotEmpty property="boardListDisplayYN" prepend=",">
				boardListDisplayYN = '$boardListDisplayYN$'
			</isNotEmpty>
			<isNotEmpty property="boardListPublicReadYN" prepend=",">
				boardListPublicReadYN = '$boardListPublicReadYN$'
			</isNotEmpty>
		</dynamic>	
		WHERE 
			boardListSeq=#boardListSeq#	
	</update>
	
	<update id="updateBoardListReadCount" parameterClass="com.song7749.mds.board.model.BoardList">
		UPDATE BoardList SET boardReadCount=boardReadCount+1 WHERE boardListSeq=#boardListSeq#	 
	</update>
	
	<!-- 보드컨텐츠 업데이트 -->
	<update id="updateBoardContents" parameterClass="com.song7749.mds.board.model.BoardList">
		UPDATE BoardContents set
			contents = '$boardContents.contents$'
		WHERE
 			boardListSeq =#boardListSeq#
	</update>

	<!-- 보드리스트 삭제 -->
	<delete id="deleteBoardList" parameterClass="com.song7749.mds.board.model.BoardList">
		<dynamic>
			<isParameterPresent>
				DELETE FROM BoardList WHERE 1=1
			</isParameterPresent>
			<isGreaterThan property="boardListSeq" compareValue="0">
				AND boardListSeq=#boardListSeq#
			</isGreaterThan>
			<isGreaterThan property="boardSeq" compareValue="0">
				AND boardSeq=#boardSeq#
			</isGreaterThan>
		</dynamic>	
	</delete>
	
	<delete id="deleteBoardContents" parameterClass="com.song7749.mds.board.model.BoardList">
		DELETE FROM BoardContents WHERE boardListSeq=#boardListSeq#
	</delete>

	<sql id="boardListWhere">
		WHERE 1=1
		<dynamic>
			<isGreaterEqual property="boardList.boardSeq" compareValue="0">
				AND bl.boardSeq=#boardList.boardSeq#
			</isGreaterEqual>
			<isNotEmpty property="boardList.boardTitle">
				AND bl.boardTitle like '%$boardList.boardTitle$%'
			</isNotEmpty>
			<isGreaterThan property="boardList.memberSeq" compareValue="0">
				AND bl.memberSeq=#boardList.memberSeq#
			</isGreaterThan>
			<isNotEmpty property="boardList.boardListDisplayYN">
				AND bl.boardListDisplayYN='$boardList.boardListDisplayYN$'
			</isNotEmpty>
		ORDER BY bl.boardListSeq DESC
		</dynamic>
	</sql>

	<resultMap class="com.song7749.mds.board.model.BoardList" id="selectBoardListsByBoardListCommand-result">
		<result property="boardListSeq" column="boardListSeq"/>
		<result property="boardSeq" column="boardSeq"/>
		<result property="boardTitle" column="boardTitle"/>
		<result property="boardReadCount" column="boardReadCount"/>
		<result property="boardCommentCount" column="boardCommentCount"/>
		<result property="memberSeq" column="memberSeq"/>
		<result property="memberNickName" column="memberNickName"/>
		<result property="memberIp" column="memberIp"/>
		<result property="boardListDisplayYN" column="boardListDisplayYN"/>
		<result property="boardListPublicReadYN" column="boardListPublicReadYN"/>
		<result property="createDatetime" column="createDatetime"/>
		<result property="updateDatetime" column="updateDatetime"/>
		<result property="boardContents.contents" column="contents"/>
	</resultMap>

	<select id="selectBoardListsByBoardListCommand" parameterClass="com.song7749.mds.board.model.command.BoardListCommand" resultMap="selectBoardListsByBoardListCommand-result">
		SELECT 
			bl.boardListSeq,
			bl.boardSeq,
			bl.boardTitle,
			bl.boardReadCount,
			bl.boardCommentCount,
			bl.memberSeq,
			bl.memberNickName,
			bl.memberIp,
			bl.boardListDisplayYN,
			bl.boardListPublicReadYN,
			bl.createDatetime,
			bl.updateDatetime,
			bc.contents			
		FROM
			BoardList bl 
			LEFT JOIN BoardContents bc ON (bl.boardListSeq=bc.boardListSeq)
		<include refid="boardListWhere" />
	</select>

	<select id="selectCountBoardListByBoardListCommand" parameterClass="com.song7749.mds.board.model.command.BoardListCommand" resultClass="Integer">
		SELECT 
			COUNT(*) AS CNT
		FROM
			BoardList bl 
			LEFT JOIN BoardContents bc ON (bl.boardListSeq=bc.boardListSeq)
		<include refid="boardListWhere" />
	</select>
	
	<insert id="insertBoardComment" parameterClass="com.song7749.mds.board.model.BoardComment">
		INSERT INTO BoardComment set
			boardListSeq = #boardListSeq#,
			comment = '$comment$', 
			memberSeq = #memberSeq#, 
			memberNickName ='$memberNickName$', 
			memberIp = '$memberIp$', 
			createDatetime = now(), 
			updateDatetime = now()
		<selectKey keyProperty="boardCommentSeq" resultClass="Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<update id="updateBoardComment" parameterClass="com.song7749.mds.board.model.BoardComment">
		UPDATE BoardComment set
				updateDatetime = now(),
				comment = '$comment$'
		WHERE 
				boardCommentSeq=#boardCommentSeq#
			AND	memberSeq = #memberSeq# 
	</update>
	
	<delete id="deleteBoardComment" parameterClass="com.song7749.mds.board.model.BoardComment">
		DELETE FROM BoardComment WHERE boardCommentSeq=#boardCommentSeq#
	</delete>
	
	<sql id="selectBoardCommentsWhere">
		WHERE 1=1
		<isGreaterThan property="boardListSeq" compareValue="0">
			AND boardListSeq=#boardListSeq#
		</isGreaterThan>
	</sql>
	
	<resultMap class="com.song7749.mds.board.model.BoardComment" id="selectBoardCommentsByBoardComment-result">
		<result property="boardCommentSeq" column="boardCommentSeq"/>
		<result property="boardListSeq" column="boardListSeq"/>
		<result property="comment" column="comment"/>
		<result property="memberSeq" column="memberSeq"/>
		<result property="memberNickName" column="memberNickName"/>
		<result property="memberIp" column="memberIp"/>
		<result property="createDatetime" column="createDatetime"/>
		<result property="updateDatetime" column="updateDatetime"/>
	</resultMap>
	
	<select id="selectBoardCommentsByBoardComment" parameterClass="com.song7749.mds.board.model.BoardComment" resultMap="selectBoardCommentsByBoardComment-result">
		SELECT 
			boardCommentSeq,
			boardListSeq,
			comment,
			memberSeq,
			memberNickName,
			memberIp,
			createDatetime,
			updateDatetime
		FROM 
			BoardComment	
		<include refid="selectBoardCommentsWhere"/>
	</select>
	
	<select id="selectCountBoardCommentByBoardComment" parameterClass="com.song7749.mds.board.model.BoardComment"  resultClass="Integer">
		SELECT 
			COUNT(*) AS cnt
		FROM 
			BoardComment	
		<include refid="selectBoardCommentsWhere"/>
	</select>	
</sqlMap>